# remap prefix from 'C-b' to 'C-Space'
unbind C-a
set-option -g prefix C-Space
bind-key C-Space send-prefix

# split panes using | and -
bind | split-window -h
bind - split-window -v
unbind '"'
unbind %

# vi mode for navigation
setw -g mode-keys vi

# mouse behavior
set -g mouse on

# reload config file (change file location to your the tmux.conf you want to use)
bind r source-file ~/.tmux.conf

# improve colors
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",xterm-256color:Tc"
# colors!  setw -g xterm-keys on set -s escape-time 10
# faster command sequences set -sg repeat-time 600
# increase repeat timeout set -s focus-events on

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on
set -g history-limit 5000                 # boost history

# -- display --
set -g base-index 1         # start windows numbering at 1
setw -g pane-base-index 1   # make pane numbering consistent with windows

setw -g automatic-rename off
set -g renumber-windows on  # renumber windows when a window is closed

# set -g set-titles on                        # set terminal title
# set -g set-titles-string '#w'

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time
set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off

# create session
bind C-c new-session

# kill session
bind C-z kill-session

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# messages
# set -g message-attr bold
# set -g message-fg colour232
# set -g message-bg colour16

# status bar.
set -g status-bg black
set -g status-fg white
set -g status-interval 60 # Default is 15.

# left side of status bar
set -g status-left-length 50
set -g status-left "#[bg=colour240] session:#S #[bg=colour236]"

# Pane border
# set -g pane-active-border-fg colour6

# right side of status bar
set -g status-right "#{prefix_highlight}#[bg=colour240] %a %b %d #[bg=colour236] #[bg=colour240] %I:%M %p #[bg=colour236]"

# enter copy mode
bind Enter copy-mode

run -b 'tmux bind -t vi-copy v begin-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi v send -X begin-selection 2> /dev/null || true'
run -b 'tmux bind -t vi-copy C-v rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi C-v send -X rectangle-toggle 2> /dev/null || true'
run -b 'tmux bind -t vi-copy y copy-selection 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi y send -X copy-selection-and-cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy Escape cancel 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi Escape send -X cancel 2> /dev/null || true'
run -b 'tmux bind -t vi-copy H start-of-line 2> /dev/null || true'
run -b 'tmux bind -T copy-mode-vi L send -X end-of-line 2> /dev/null || true'

# copy to Mac OSX clipboard
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'

# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'

# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'


# -- buffers --
bind b list-buffers  # list paste buffers
bind p paste-buffer  # paste from the top paste buffer
bind P choose-buffer # choose which buffer to paste from

# # This is my old config
# # disable all of this for now
#
# # use C-a, since it's on the home row and easier to hit than C-b
# set-option -g prefix C-a
# unbind-key C-a
# bind-key C-a send-prefix
# set -g base-index 1
#
# # Easy config reload
# bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."
#
#
# set-option -g default-terminal screen-256color
#
# bind-key : command-prompt
# bind-key r refresh-client

bind-key L clear-history

#
# bind-key space next-window
# bind-key bspace previous-window
# bind-key enter next-layout
#
# # use vim-like keys for splits and windows
# bind-key v split-window -h -c "#{pane_current_path}"
# bind-key s split-window -v -c "#{pane_current_path}"
# bind-key h select-pane -L
# bind-key j select-pane -D
# bind-key k select-pane -U
# bind-key l select-pane -R
#
# # uncomment below stanza to enable smart pane switching with awareness of vim splits
# # bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
# # bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
# # bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
# # bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
# # bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
# # bind C-l send-keys 'C-l'
#
# bind-key C-o rotate-window
#
# bind-key + select-layout main-horizontal
# bind-key = select-layout main-vertical
# set-window-option -g other-pane-height 25
# set-window-option -g other-pane-width 80
#
# bind-key a last-pane
# bind-key q display-panes
# bind-key c new-window
# bind-key t next-window
# bind-key T previous-window
#
# bind-key [ copy-mode
# bind-key ] paste-buffer
#
# run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"
#
# # Setup 'v' to begin selection as in Vim
# # Update default binding of `Enter` to also use copy-pipe
# #
# # New keybindings for vi-mode when version >= 2.4
# # https://github.com/tmux/tmux/issues/754
# if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  # 'bind-key -T copy-mode-vi v send-keys -X begin-selection ; \
  # bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy" ; \
  # unbind -T copy-mode-vi Enter ; \
  # bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"; ' \
  # 'bind-key -t vi-copy v begin-selection ; \
  # bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy" ; \
  # unbind -t vi-copy Enter ; \
  # bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"; '
#
# set-window-option -g display-panes-time 1500
#
# # Status Bar
# set-option -g status-interval 1
set -g status-position top
set -g status-justify centre

# set -g status-bg colour18
# set -g status-fg colour137
# set -g status-attr dim

# status bar color
set-option -g status-bg colour236
set-option -g status-fg white

# set -g status-left ''
# set -g status-right '#[fg=colour233,bg=colour19,bold] %d/%m #[fg=colour233,bg=colour8,bold] %H:%M:%S '
# set -g status-right-length 50
# set -g status-left-length 20

# window status
set-option -g window-status-format "#[bg=colour240] #I:#W "
set-option -g window-status-current-format "#[fg=black,bg=colour6] #I:#W "
set-option -g window-status-separator " "
set-option -g status-justify centre

# set-option -g window-status-format "#[bg=colour240] #I:#W "
# set-option -g window-status-current-format "#[fg=black,bg=colour6] #I:#W "
# set-option -g window-status-separator " "
# set-option -g status-justify centre

# setw -g window-status-attr none
# setw -g window-status-bg colour18
# setw -g window-status-current-attr bold
# setw -g window-status-current-bg colour19
# setw -g window-status-current-fg colour1
# setw -g window-status-current-format ' #I#[fg=colour249]:#[fg=colour255]#W#[fg=colour249]#F '
# setw -g window-status-fg colour9
# setw -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

# setw -g window-status-bell-attr bold
# setw -g window-status-bell-fg colour255
# setw -g window-status-bell-bg colour1

# set-option -g status-left ''
# set-option -g status-right '%l:%M%p'
# set-window-option -g window-status-current-fg magenta
# set-option -g status-fg default
#
# # Status Bar solarized-dark (default)
# set-option -g status-bg black
# set-option -g pane-active-border-fg black
# set-option -g pane-border-fg black
#
# # Status Bar solarized-light
# if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g status-bg white"
# if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-active-border-fg white"
# if-shell "[ \"$COLORFGBG\" = \"11;15\" ]" "set-option -g pane-border-fg white"
#
# # Set window notifications
# setw -g monitor-activity on
# set -g visual-activity on
#
# # Enable native Mac OS X copy/paste
# set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"
#
# # Allow the arrow key to be used immediately after changing windows
# set-option -g repeat-time 0
#
# # Fix to allow mousewheel/trackpad scrolling in tmux 2.1
# bind-key -T root WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
# bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"
#
# # Disable assume-paste-time, so that iTerm2's "Send Hex Codes" feature works
# # with tmux 2.1. This is backwards-compatible with earlier versions of tmux,
# # AFAICT.
# set-option -g assume-paste-time 0
#
# source-file ~/.tmux.conf.local
#
# # panes
# set -g pane-boder-fg black
# set -g pane-active-border-fg brightred
#
# #window mode
# setw -g mode-bg colour6
# setw -g mode-fg colour0
#
# # window status
# setw -g window-status-format " #F#I:#W#F "
# setw -g window-status-current-format " #F#I:#W#F "
# setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=cyan]#[fg=colour8] #W "
# setw -g window-status-current-format "#[bg=brightmagenta]#[fg=colour8] #I #[fg=colour8]#[bg=colour14] #W "
# setw -g window-status-current-bg colour0
# setw -g window-status-current-fg colour11
# setw -g window-status-current-attr dim
# setw -g window-status-bg green
# setw -g window-status-fg black
# setw -g window-status-attr reverse

